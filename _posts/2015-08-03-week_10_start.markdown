---
layout: post
title: "OCS - Start of Week 10"
date: 2015-08-03
categories: non-technical omaha-code-school
---
All of Week 9 has been focused on making ModeShift's project! It's made drastic improvements and we're just about done with our first version.

Our group split between front-end and back-end work, and my primary focus has been on back-end. I worked on the database changes, and making sure the views functionally reflected the database structure. This has been interesting to work on while I have group members working on design.

One thing I am curious about is what a "typical" work-flow looks like, if there is one. What we ended up doing was starting off our project with discussions about what kind of database structure we thought we wanted. We created some quick database structures and generated views. From there, we thought a bit about design of our website and started considering user flow. After we thought through some of those aspects, we realized that we needed to make several changes to our current setup to enhance the user and admin experience. This was unfortunately after working on it for almost a week. In our particular situation, if we had started by thinking through user flow and what we wanted them to access, we would have saved ourselves some time. We thought through it at the start of the project, but I don't think we fully flushed it out as well as we should have. So I wonder if a typical project should always start with the "flow" in mind, or if it's better to start with the data construction and build out from there. It seems like if you have a decent structure that's flexible, you should be able to build a sensible user flow from that. We started with a strict database structure that didn't allow us much flexibility. Maybe the best approach is to do them both concurrently, before starting any code? I'm not really sure.

One thing I've discovered though, is that that I enjoy working on functionality and data. I wasn't sure if I'd be a better fit for front-end or back-end, and I think I've really enjoyed doing the back-end work for this project. I think about the work that one of my group members is doing on the front-end, and it seems slightly less exciting. Not to say I wouldn't enjoy doing it, but I'm not sure I'd like it quite as much and working on functionality. It gives me a good sense of accomplishment knowing that I added a new feature or made something work.

These group projects, in all, have been much more difficult than working in a pair. One _huge_ frustration our group had was using gems that we weren't super familiar with. We started building our product, then later added in ActiveAdmin. This gem was used to add a very nice-looking, convenient admin dashboard which gives admin user's the ability to see and filter data. ActiveAdmin came with _tons_ of extra features built in. Devise was the way ActiveAdmin encrypts admin accounts and passwords. Devise alone generated what felt like a million extra views! Everything was taken-over. After we implemented ActiveAdmin and got Devise installed, everything seemed to break. Our entire group was at a standstill while we read documentation on these gems to try to wrangle them into something usable. It seemed horrifically difficult.

We struggled for a full day on what felt like wasted time. We finally got it figured out, but it definitely took some tweaking. I think by the end we all got a good grasp on those gems, but I'm not fully convinced it was worth the extra time when we could have built some of that functionality ourselves. After working with it longer, we grew to appreciate how much it did for us, but it definitely was a pain at first.

Debugging was hard. Communication has been hard. It seems like a group has to really communicate what each team member is working on and what issues they're having. Sometimes we were great at that and we were very productive. Other times, merge conflicts were astounding and nearly impossible to deconflict! I'm glad for the experience of working in a group with a project manager and separate work assignments because I feel like it's a decent test for how things might be when I have a job. I can't say it was always easy though, or that it went perfectly smooth. I think all of us grew from it though and we are left with a [product][modeshift] that we can all be proud of! We're spending the next day or two wrapping things up and really working through the last things we want to integrate before we proclaim it Version 1, and I'm excited to get it to that point!

[modeshift]: https://aqueous-retreat-2523.herokuapp.com/
