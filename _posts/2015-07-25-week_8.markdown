---
layout: post
title: "OCS - Week 8"
date: 2015-07-25
categories: non-technical omaha-code-school
---
This week, much like any other, was busy and full of new concepts. Differently, though, it's been a week in which almost all projects were done in pairs or groups. We've had new concepts sprinkled in, and a ton of reinforcement of those concepts in paired/group settings. We've been working on building projects from scratch and seeing them through in a group. This has been an interesting approach to programming.

To start, on Monday we learned about RESTful route handling. It makes sense that there is a solid pattern to set up the way we navigate websites and how we implement the CRUD applications for each of our models. After learning this, our project was to work as a pair and complete a project using two models with the RESTful pattern. Much of this involved refactoring nested routes and trying to figure out how the user would be able to best navigate an application. This project went smoother than anticipated, and my partner and I were able to make some great progress and get it to a decent stopping point.

The next day, we learned Ruby on Rails. This was a bit of a changeup from using Sinatra. I feel like I was just getting used to Sinatra and had a few projects that I had grown comfortable with. Rails, while new and different, looked pretty slick and I was excited to check it out. Our project for that day was to redo our project from the previous day, but do it in Rails. I found that after getting used to all the changes and specific naming conventions that were necessary, it was fairly smooth sailing. I was able to replicate my work from the previous day relatively quick and was getting some decent practice in with Rails.

Wednesday was another pair project using Rails, but this time we had a few more features to implement into another brand new project. Some things we integrated were named routes and sensible user-facing URLs. I worked with another partner for this project, and we got through it okay. Again, we didn't quite get it to a complete state, so we had to finish that up the next morning.

The rest of the week had a few new tools that we were introduced to for integration in Rails. One of those was learning scaffolding. _Holy cow!_ There is *so* much automation being done! I'm not exactly sure I'm a fan. I feel like it almost takes away the entire back-end workload and makes a project completely front-end focused (after maybe a few adjustments here and there). I enjoy doing that work and being completely aware of what I'm working with. I'm sure it's just because I'm not fully comfortable with all of the generated files yet and I'll learn those better over time. It is a _huge_ timesaver, so that's a great benefit. But I guess, for me anyway, it seems like I have to really think through what the purpose of the model I'm building is for and if it really makes sense to use the auto-generated files. Or, generate them and spend a lot of time going through the controller and views to modify it where needed. I'm sure this process gets smoother over time and it'll become more of a natural instinct on what the best approach is when building out a project.

We rounded out the week by getting our groups and projects assigned to us. This group project is more extensive than any project we've done on our own, and will consume all of next week.  Our group met and started working on our specs, which were already nearly done. The project we were assigned is to build an application that has web and mobile access to track bicyclists and pedestrian traffic. Every two years, a project is done to keep track of certain statistics regarding non-vehicular traffic, and this has traditionally always been done on paper. Our job is to make a system where users can enter this information online. So yesterday, we went over the purpose and started getting to work.

Ultimately, I feel like this week was practice for the real world. We have assignments, we have teams/pairs, and we have to get the work done. This week we've built several projects from scratch, all the while integrating new concepts. I heard some of the others complaining and chatting online griping about having to work with certain people in the class or not wanting to do a certain part of a project. It's easy to gripe, but at the same time, I think it's easier to just get the work done. I'm not going to get to choose who I work with at my first job, or what projects I'm given, or what part of a project I want to work on. It's a great practice in learning to love my job, regardless of all the other noise that's thrown in with it. I'm getting to code and build incredible things that I never thought I was capable of building, and for me, that's pretty awesome.
